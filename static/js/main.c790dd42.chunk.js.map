{"version":3,"sources":["model.js","translations.js","locales/en/translation.js","App.js","serviceWorker.js","index.js"],"names":["FILENAME","Model","xpathSync","node","path","el","ret","els","treeSync","evaluate","XPathResult","ANY_TYPE","iterateNext","push","xpath","a","tree","features","map","attributes","name","value","predict","row","segments","runSimplePredicate","predicate","fv","parseFloat","field","cv","operator","Error","findScore","condition","length","nodeName","reduce","acc","v","score","Promise","all","segment","resolve","setTimeout","weight","root","this","reject","caches","match","cached","fetch","r","responseClone","clone","open","then","cache","put","response","text","str","window","DOMParser","parseFromString","resources","en","translation","i18n","use","detector","reactI18nextModule","init","fallbackLng","keySeparator","interpolation","escapeValue","regions_map","App","t","state","changedSinceSubmitted","salary","answers","ubicacion","exp","study","employees","activity","duty","occupation","os","options","degree","specialization","contractType","sexualOrientation","events","benefits","universities","tech","handleChange","event","setState","key","target","val","Array","isArray","index","indexOf","arr","concat","splice","Object","assign","sort","updateSalary","model","fromEntries","entries","k","enc","join","encodeURIComponent","formatter","Intl","NumberFormat","style","currency","minimumFractionDigits","prefixOptions","prefix","filter","f","startsWith","substr","params","className","href","rel","FormControl","component","required","FormLabel","RadioGroup","aria-label","onChange","FormControlLabel","control","Radio","label","InputLabel","htmlFor","Select","inputProps","id","MenuItem","from","keys","slice","i","x","FormGroup","Checkbox","checked","TextField","type","InputLabelProps","shrink","min","margin","height","ts","Box","bgcolor","color","p","position","top","right","zIndex","format","Component","withNamespaces","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","headers","contentType","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c790dd42.chunk.js","sourcesContent":["const FILENAME = 'decision_tree.xml';\n\nexport default class Model {\n    constructor() {\n        this.tree = new Promise(async (resolve, reject) => {\n            try {\n                const cached = await caches.match(FILENAME)\n                if (cached) {\n                    resolve(cached);\n                    return\n                }\n            } catch (e) {}\n            const r = await fetch(FILENAME)\n            const responseClone = r.clone();\n            caches.open('v1').then(function (cache) {\n                cache.put(FILENAME, responseClone);\n            });\n            resolve(r)\n        })\n            .then(response => response.text())\n            .then(str => { return this.treeSync = (new window.DOMParser()).parseFromString(str, \"text/xml\") })\n    }\n\n    xpathSync = (node, path) => {\n        const ns = () => 'http://www.dmg.org/PMML-4_4';\n        const ret = [];\n        let els = this.treeSync.evaluate(path, node, ns, XPathResult.ANY_TYPE, null);\n        let el;\n        while ((el = els.iterateNext())) {\n            ret.push(el)\n        }\n        return ret;\n    }\n\n    xpath = async (node, path) => {\n        await this.tree\n        return this.xpathSync(node, path)\n    }\n\n    features = async () => {\n        return (await this.xpath(await this.tree, '/pmml:PMML/pmml:DataDictionary/pmml:DataField')).map((node) => node.attributes.name.value)\n    }\n\n    predict = async (row) => {\n        const segments = this.xpathSync(await this.tree, '/pmml:PMML/pmml:MiningModel/pmml:Segmentation/pmml:Segment');\n        const runSimplePredicate = (predicate) => {\n            const fv = parseFloat(row[predicate.attributes.field.value] || 0.0);\n            const cv = parseFloat(predicate.attributes.value.value);\n            switch (predicate.attributes.operator.value) {\n                case 'lessThan': return fv < cv;\n                case 'lessOrEqual': return fv <= cv;\n                case 'greaterThan': return fv > cv;\n                case 'greaterOrEqual': return fv >= cv;\n                case 'equal': return fv === cv;\n                default: throw new Error('Unsupported operator: ' + predicate.attributes.operator.value);\n            }\n        }\n        const findScore = (node) => {\n            const condition = this.xpathSync(node, 'pmml:True|pmml:SimplePredicate')\n            if (condition.length !== 1) {\n                throw new Error('Unsupported number of conditions: ' + condition.length)\n            }\n            if (condition[0].nodeName === 'SimplePredicate' && !runSimplePredicate(condition[0])) {\n                return 0.0;\n            }\n            const children = this.xpathSync(node, 'pmml:Node');\n            return children.map(findScore).reduce((acc, v) => acc + v, parseFloat(node.attributes.score ? node.attributes.score.value : 0.0))\n        };\n        return (await Promise.all(segments.map(async (segment) => {\n            await new Promise((resolve) => setTimeout(resolve, 0))\n            const weight = parseFloat(segment.attributes.weight.value)\n            const root = this.xpathSync(segment, 'pmml:TreeModel/pmml:Node')[0]\n            const score = findScore(root);\n            return weight * score;\n        }))).reduce((acc, v) => acc + v, 0.0)\n    }\n}\n","import i18n from \"i18next\";\nimport detector from \"i18next-browser-languagedetector\";\nimport { reactI18nextModule } from \"react-i18next\";\n\nimport translationEN from './locales/en/translation';\n\n// the translations\nconst resources = {\n  en: {\n    translation: translationEN\n  },\n};\n\ni18n\n  .use(detector)\n  .use(reactI18nextModule) // passes i18n down to react-i18next\n  .init({\n    resources,\n    fallbackLng: \"es\", // use en if detected lng is not available\n\n    keySeparator: false, // we do not use keys in form messages.welcome\n\n    interpolation: {\n      escapeValue: false // react already safes from xss\n    }\n  });\n\nexport default i18n;\n","export default {\n  \"Predicción de sueldos\": \"Salary prediction\",\n  \"Completá el formulario siguiente y obtené una estimación del sueldo bruto que podrías estar ganando.\": \"Fill out the form below and get an estimate of the gross salary you could be earning.\",\n  \"El sueldo se estima de acuerdo a un modelo armado de datos recolectados en la encuesta anónima.\": \"The salary is estimated according to a model armed with data collected in the anonymous survey.\",\n  \"Si te interesa saber cómo están armados, podés leer el paso a paso\": \"If you are interested in knowing how they are assembled, you can read the step by step\",\n  \"aquí\": \"here\",\n  \"Los modelos se armaron con datos recolectados en la\": \"The models were assembled with data collected in the\",\n  \"encuesta de sysarmy\": \"sysarmy survey\",\n  \"llevada entre diciembre de 2019 y febrero de 2020.\": \"conducted between December 2019 and February 2020.\",\n  \"Los resultados son a fines recreativos y no deben usarse para decisiones de contratación. El modelo discrimina por género, edad y orientación sexual, por lo que hacerlo es probablemente ilegal. La muestra usada no es representativa, por lo que los resultados no pueden generalizarse a la población en general.\": \"Results are for recreational purposes and should not be used for hiring decisions. The model discriminates on the basis of gender, age, and sexual orientation, so doing so is probably illegal. The sample used is not representative, so the results cannot be generalized to the general population.\",\n  \"La información se procesa en el browser, así que ningún servidor almacena las evaluaciones que se hagan.\": \"The information is processed in the browser, so no server stores the evaluations that are made.\",\n  \"Edad\": \"Age\",\n  \"Me identifico\": \"I identify myself as\",\n  \"Hombre\": \"Man\",\n  \"Mujer\": \"Woman\",\n  \"Otros\": \"Others\",\n  \"año\": \"year\",\n  \"años\": \"years\",\n  \"Dónde estás trabajando\": \"Where are you working\",\n  \"Ciudad Autónoma de Buenos Aires\": \"Buenos Aires City\",\n  \"GBA\": \"Buenos Aires City conurbation\",\n  \"Provincia de Buenos Aires\": \"Buenos Aires Province\",\n  \"Años de experiencia\": \"Years of expertise\",\n  'Menos de un año': 'Less than a year',\n  'Nivel de estudios alcanzado': 'Level of studies achieved',\n  'Primario': 'Elementary School',\n  'Secundario': 'High School',\n  'Terciario': 'Tertiary education',\n  'Universitario': 'College',\n  'Posgrado': 'Postgraduate',\n  'Doctorado': 'PhD',\n  'Estado': 'Status',\n  'En curso': 'Ongoing',\n  'Incompleto': 'Incomplete',\n  'Completado': 'Completed',\n  'Carrera': 'Career',\n  'Analista Programador': 'Programming Analyst',\n  \"Analista de Sistemas\": 'System Analyst',\n  \"Diseño Gráfico\": 'Graphic Design',\n  \"Ingeniería Electrónica\": 'Electronic Engineering',\n  \"Ingeniería en Computación\": 'Computer Engineering',\n  \"Ingeniería en Informática\": 'Computing Engineering',\n  \"Ingeniería en Sistemas de Información\": 'Informational Systems Engineering',\n  \"Licenciatura en Administración\": 'Degree in Administration',\n  \"Licenciatura en Análisis de Sistemas\": 'Degree in Systems Analysis',\n  \"Licenciatura en Ciencias dela Computación\": 'Degree in Computer Ciences',\n  \"Licenciatura en Informática\": 'Degree in Computing',\n  \"Licenciatura en Sistemas de Información\": 'Degree in Informational Systems',\n  \"Tecnicatura Superior en Programación\": 'Higher Technical Degree in Programming',\n  \"Tecnicatura Superior en Sistemas Informáticos\": 'Higher Technical Degree in Informational Systems',\n  \"Tecnicatura en Informática\": 'Technical Degree in Computing',\n  \"Tecnicatura en Programación\": 'Technical Degree in Programming',\n  \"Otro\": 'Other',\n  \"Otra\": 'Other',\n  \"Universidad\": 'College',\n  \"Escuela Da Vinci\": 'Da Vinci School',\n  \"ORT\": 'ORT',\n  \"UADE - Universidad Argentina De la Empresa\": 'UADE - Argentinian Company University',\n  \"UAI - Universidad Abierta Interamericana\": 'UAT - Open Inter-american University',\n  \"UBA - Universidad de Buenos Aires\": 'UBA - Buenos Aires University',\n  \"UCAECE - Centro de Altos Estudios en Ciencias Exactas\": 'UCAECE - Center of High Studies in Exact Sciences',\n  \"UNC - Universidad Nacional de Córdoba\": 'UNC - Cordoba National University',\n  \"UNICEN - Universidad Nacional del Centro de la Provincia de Buenos Aires\": 'UNICEN - Center of Buenos Aires Province National University',\n  \"UNLP - Universidad Nacional de La Plata\": 'UNLP - La Plata National University',\n  \"UNLaM - Universidad Nacional de La Matanza\": 'UNLaM - La Matanza National University',\n  \"UP - Universidad de Palermo\": 'UP - Palermo University',\n  \"USAL - Universidad del Salvador\": 'USAL - El Salvador University',\n  \"UTN - Universidad Tecnológica Nacional\": 'UTN - Technology National University',\n  \"Universidad Siglo 21\": '21 Century University',\n}\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport Box from '@material-ui/core/Box';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Select from '@material-ui/core/Select';\nimport TextField from '@material-ui/core/TextField';\n\nimport Model from './model';\nimport './translations';\nimport { withNamespaces } from 'react-i18next';\n\nconst regions_map = {\n    'Ciudad Autónoma de Buenos Aires': 'AMBA',\n    'GBA': 'AMBA',\n    'Catamarca': 'NOA',\n    'Chaco': 'NEA',\n    'Chubut': 'Patagonia',\n    'Corrientes': 'NEA',\n    'Entre Ríos': 'NEA',\n    'Formosa': 'NEA',\n    'Jujuy': 'NOA',\n    'La Pampa': 'Pampa',\n    'La Rioja': 'NOA',\n    'Mendoza': 'Cuyo',\n    'Misiones': 'NEA',\n    'Neuquén': 'Patagonia',\n    'Río Negro': 'Patagonia',\n    'Salta': 'NOA',\n    'San Juan': 'Cuyo',\n    'San Luis': 'Cuyo',\n    'Santa Cruz': 'Patagonia',\n    'Santa Fe': 'Pampa',\n    'Santiago del Estero': 'NOA',\n    'Tucumán': 'NOA',\n    'Córdoba': 'Pampa',\n    'Provincia de Buenos Aires': 'Pampa',\n    'Tierra del Fuego': 'Patagonia',\n};\n\nclass App extends Component {\n  state = {\n    changedSinceSubmitted: true,\n    salary: null,\n    answers: {\n      'Me identifico': '',\n      'Carrera': '',\n      'Universidad': '',\n      'contract-type': '',\n      'sexualOrientation': '',\n      '¿Sufriste o presenciaste situaciones de violencia laboral?': '',\n      '¿Tenés algún tipo de discapacidad?': '',\n      'Tengo': 18,\n      ubicacion: 'Ciudad Autónoma de Buenos Aires',\n      exp: 0,\n      study: '',\n      'Estado': '',\n      employees: '',\n      activity: '',\n      duty: [],\n      '¿Gente a cargo?': 0,\n      'opensource-contributor': '',\n      'code-as-hobbie': '',\n      occupation: '',\n      os: '',\n      'os-mobile': '',\n      'Realizaste cursos de especialización': [],\n      'Plataformas': [],\n      'Lenguajes de programación': [],\n      'Frameworks, herramientas y librerías': [],\n      'Bases de datos': [],\n      'IDEs': [],\n      'Beneficios extra': [],\n      '¿A qué eventos de tecnología asististe en el último año?': [],\n    },\n    options: {\n        degree: [],\n        specialization: [],\n        occupation: [],\n        duty: [],\n        contractType: [],\n        sexualOrientation: [],\n        os: [],\n        events: [],\n        benefits: [],\n        universities: [],\n        tech: {\n          'Plataformas': [],\n          'Lenguajes de programación': [],\n          'Bases de datos': [],\n          'IDEs': [],\n        },\n    },\n    'results': []\n  };\n\n  constructor({t}) {\n    super();\n    this.model = new Model();\n    this.t = t\n    this.formatter = new Intl.NumberFormat('es-AR', {\n      style: 'currency',\n      currency: 'ARS',\n      minimumFractionDigits: 2,\n    });\n  }\n\n  handleChange = async (event) => {\n    this.setState({changedSinceSubmitted: true})\n    const key = event.target.name\n    const val = event.target.value\n    if (Array.isArray(this.state.answers[key])) {\n      const index = this.state.answers[key].indexOf(val)\n      if (index >= 0) {\n        const arr = this.state.answers[key].concat([])\n        arr.splice(index, 1)\n        this.setState({ answers: Object.assign({}, this.state.answers, { [key]: arr }) });\n      } else {\n        this.setState({ answers: Object.assign({}, this.state.answers, { [key]: this.state.answers[key].concat([val]).sort() }) });\n      }\n    } else {\n      this.setState({ answers: Object.assign({}, this.state.answers, { [key]: val }) });\n    }\n    await this.updateSalary();\n  };\n\n  updateSalary = async () => {\n    await this.setState({salary: null})\n    const answers = Object.assign({}, this.state.answers)\n    answers['Dónde estás trabajando'] = answers.ubicacion;\n    answers['Años de experiencia'] = answers.exp;\n    answers['Nivel de estudios alcanzado'] = answers.study;\n    answers['Cantidad de empleados'] = answers.employees;\n    answers['Actividad principal'] = answers.activity\n    answers['¿Contribuís a proyectos open source?'] = answers['opensource-contributor']\n    answers['¿Programás como hobbie?'] = answers['code-as-hobbie']\n    answers['¿Tenés guardias?'] = answers.duty\n    answers['Trabajo de'] = answers.occupation\n    answers['¿Qué SO usás en tu laptop/PC para trabajar?'] = answers.os\n    answers['¿Y en tu celular?'] = answers['os-mobile']\n    answers['Tipo de contrato'] = answers['contract-type']\n    answers['Orientación sexual'] = answers.sexualOrientation\n\n    const salary = await this.model.predict(Object.fromEntries(Object.entries(answers).map(([k, v]) =>\n        'Dónde estás trabajando' === k ? ['region=' + regions_map[v], 1] :\n        (['¿Gente a cargo?', 'Años de experiencia', 'Tengo'].indexOf(k) === -1 ? [k + '=' + v, 1.0] : [k, v])\n    )));\n    await this.setState({salary})\n  }\n\n  enc = val => {\n    if (Array.isArray(val)) {\n      val = val.join(', ')\n    }\n    return encodeURIComponent(val)\n  };\n\n  async componentDidMount() {\n    const t = this.t\n    const features = await this.model.features()\n    const prefixOptions = (prefix) => features.filter((f) => f.startsWith(prefix + '=')).map((f) => f.substr(prefix.length + 1))\n    this.setState({options: {\n      degree: prefixOptions('Carrera').sort().concat([t('Otra')]),\n      universities: prefixOptions('Universidad').sort().concat([t('Otra')]),\n      specialization: prefixOptions('Realizaste cursos de especialización'),\n      occupation: prefixOptions('Trabajo de').sort().concat([t('Otra')]),\n      duty: prefixOptions('¿Tenés guardias?').sort(),\n      contractType: prefixOptions('Tipo de contrato').sort().concat([t('Otro')]),\n      sexualOrientation: prefixOptions('Orientación sexual').sort().concat([t('Otra')]),\n      os: prefixOptions('¿Qué SO usás en tu laptop/PC para trabajar?').sort().concat([t('Otro')]),\n      events: prefixOptions('¿A qué eventos de tecnología asististe en el último año?').sort(),\n      benefits: prefixOptions('Beneficios extra').sort(),\n      tech: {\n        'Plataformas': prefixOptions('Plataformas').sort(),\n        'Lenguajes de programación': prefixOptions('Lenguajes de programación').sort(),\n        'Bases de datos': prefixOptions('Bases de datos').sort(),\n        'IDEs': prefixOptions('IDEs').sort(),\n      },\n    }});\n    this.updateSalary();\n  }\n\n  render(params) {\n    const t = this.t\n    const {salary} = this.state;\n    const {os, sexualOrientation, contractType, duty, occupation, specialization, benefits, events, tech, degree, universities} = this.state.options;\n\n    return (\n      <div className=\"App\">\n        <header>\n        <h1>{t('Predicción de sueldos')}</h1>\n        </header>\n        <h2>{t('Explicación')}</h2>\n        <p>{t('Completá el formulario siguiente y obtené una estimación del sueldo bruto que podrías estar ganando.')}</p>\n        <p>{t('El sueldo se estima de acuerdo a un modelo armado de datos recolectados en la encuesta anónima.')}</p>\n        <p>{t('Si te interesa saber cómo están armados, podés leer el paso a paso')} <a href=\"text/prediccion-de-sueldo/index.html\">{t('aquí')}</a>.</p>\n        <p>{t('Los modelos se armaron con datos recolectados en la')} <a href=\"https://sysarmy.com/blog/posts/resultados-de-la-encuesta-de-sueldos-2020-1/\" target=\"_blank\" rel=\"noopener noreferrer\">{t('encuesta de sysarmy')}</a> {t('llevada entre diciembre de 2019 y febrero de 2020')}.</p>\n        <p>{t('Los resultados son a fines recreativos y no deben usarse para decisiones de contratación. El modelo discrimina por género, edad y orientación sexual, por lo que hacerlo es probablemente ilegal. La muestra usada no es representativa, por lo que los resultados no pueden generalizarse a la población en general.')}</p>\n        <p>{t('La información se procesa en el browser, así que ningún servidor almacena las evaluaciones que se hagan.')}</p>\n        <hr/>\n        <h2>Formulario interactivo</h2>\n        <div>\n          <FormControl component=\"fieldset\" required className=\"form-element\">\n            <FormLabel component=\"legend\">{t('Me identifico')}</FormLabel>\n            <RadioGroup\n              aria-label=\"Me identifico\"\n              name=\"Me identifico\"\n              value={this.state.answers['Me identifico']}\n              onChange={this.handleChange}\n            >\n              <FormControlLabel value=\"Hombre\" control={<Radio />} label={t('Hombre')} />\n              <FormControlLabel value=\"Mujer\" control={<Radio />} label={t('Mujer')} />\n              <FormControlLabel value=\"Otros\" control={<Radio />} label={t('Otros')} />\n            </RadioGroup>\n          </FormControl>\n        </div>\n        <div>\n          <FormControl className=\"form-element\">\n            <InputLabel htmlFor=\"Tengo\">{t('Edad')}</InputLabel>\n            <Select\n              value={this.state.answers['Tengo']}\n              onChange={this.handleChange}\n              inputProps={{\n                name: 'Tengo',\n                id: 'Tengo',\n              }}\n            >\n              <MenuItem value=\"1\">1 {t('año')}</MenuItem>\n              {Array.from(Array(100).keys()).slice(2).map((i) => <MenuItem value={i} key={i}>{i} {t('años')}</MenuItem>)}\n            </Select>\n          </FormControl>\n        </div>\n        <div>\n          <FormControl className=\"form-element\">\n            <InputLabel htmlFor=\"ubicacion\">{t('Dónde estás trabajando')}</InputLabel>\n            <Select\n              value={this.state.answers['ubicacion']}\n              onChange={this.handleChange}\n              inputProps={{\n                name: 'ubicacion',\n                id: 'ubicacion',\n              }}\n            >\n              <MenuItem value=\"Catamarca\">Catamarca</MenuItem>\n              <MenuItem value=\"Chaco\">Chaco</MenuItem>\n              <MenuItem value=\"Chubut\">Chubut</MenuItem>\n              <MenuItem value=\"Ciudad Autónoma de Buenos Aires\">{t('Ciudad Autónoma de Buenos Aires')}</MenuItem>\n              <MenuItem value=\"Corrientes\">Corrientes</MenuItem>\n              <MenuItem value=\"Córdoba\">Córdoba</MenuItem>\n              <MenuItem value=\"Entre Ríos\">Entre Ríos</MenuItem>\n              <MenuItem value=\"Formosa\">Formosa</MenuItem>\n              <MenuItem value=\"GBA\">{t('GBA')}</MenuItem>\n              <MenuItem value=\"Jujuy\">Jujuy</MenuItem>\n              <MenuItem value=\"La Pampa\">La Pampa</MenuItem>\n              <MenuItem value=\"La Rioja\">La Rioja</MenuItem>\n              <MenuItem value=\"Mendoza\">Mendoza</MenuItem>\n              <MenuItem value=\"Misiones\">Misiones</MenuItem>\n              <MenuItem value=\"Neuquén\">Neuquén</MenuItem>\n              <MenuItem value=\"Provincia de Buenos Aires\">{t('Provincia de Buenos Aires')}</MenuItem>\n              <MenuItem value=\"Río Negro\">Río Negro</MenuItem>\n              <MenuItem value=\"Salta\">Salta</MenuItem>\n              <MenuItem value=\"San Juan\">San Juan</MenuItem>\n              <MenuItem value=\"San Luis\">San Luis</MenuItem>\n              <MenuItem value=\"Santa Cruz\">Santa Cruz</MenuItem>\n              <MenuItem value=\"Santa Fe\">Santa Fe</MenuItem>\n              <MenuItem value=\"Santiago del Estero\">Santiago del Estero</MenuItem>\n              <MenuItem value=\"Tierra del Fuego\">Tierra del Fuego</MenuItem>\n              <MenuItem value=\"Tucumán\">Tucumán</MenuItem>\n            </Select>\n          </FormControl>\n        </div>\n        <div>\n          <FormControl className=\"form-element\">\n            <InputLabel htmlFor=\"exp\">{t('Años de experiencia')}</InputLabel>\n            <Select\n              value={this.state.answers['exp']}\n              onChange={this.handleChange}\n              inputProps={{\n                name: 'exp',\n                id: 'exp',\n              }}\n            >\n              <MenuItem value={0}>{t('Menos de un año')}</MenuItem>\n              {Array.from(Array(100).keys()).slice(1).map((i) => <MenuItem value={i} key={i}>{i} {t('años')}</MenuItem>)}\n            </Select>\n          </FormControl>\n        </div>\n        <div>\n          <FormControl className=\"form-element\">\n            <InputLabel htmlFor=\"study\">{t('Nivel de estudios alcanzado')}</InputLabel>\n            <Select\n              value={this.state.answers['study']}\n              onChange={this.handleChange}\n              inputProps={{\n                name: 'study',\n                id: 'study',\n              }}\n            >\n              <MenuItem value=\"Primario\">{t('Primario')}</MenuItem>\n              <MenuItem value=\"Secundario\">{t('Secundario')}</MenuItem>\n              <MenuItem value=\"Terciario\">{t('Terciario')}</MenuItem>\n              <MenuItem value=\"Universitario\">{t('Universitario')}</MenuItem>\n              <MenuItem value=\"Posgrado\">{t('Posgrado')}</MenuItem>\n              <MenuItem value=\"Doctorado\">{t('Doctorado')}</MenuItem>\n            </Select>\n          </FormControl>\n        </div>\n        <div>\n          <FormControl className=\"form-element\">\n            <InputLabel htmlFor=\"Estado\">{t('Estado')}</InputLabel>\n            <Select\n              value={this.state.answers['Estado']}\n              onChange={this.handleChange}\n              inputProps={{\n                name: 'Estado',\n                id: 'Estado',\n              }}\n            >\n              <MenuItem value=\"En curso\">{t('En curso')}</MenuItem>\n              <MenuItem value=\"Incompleto\">{t('Incompleto')}</MenuItem>\n              <MenuItem value=\"Completado\">{t('Completado')}</MenuItem>\n            </Select>\n          </FormControl>\n        </div>\n        <div>\n          <FormControl className=\"form-element\">\n            <InputLabel htmlFor=\"Carrera\">{t('Carrera')}</InputLabel>\n            <Select\n              aria-label=\"Carrera\"\n              name=\"Carrera\"\n              inputProps={{\n                  id: \"Carrera\"\n              }}\n              value={this.state.answers['Carrera']}\n              onChange={this.handleChange}\n            >\n              {degree.map((x) =>\n              <MenuItem\n                key={`degree-${x}`}\n                value={x}\n              >{t(x)}</MenuItem>\n              )}\n            </Select>\n          </FormControl>\n        </div>\n        <div>\n          <FormControl className=\"form-element\">\n            <InputLabel htmlFor=\"Universidad\">{t('Universidad')}</InputLabel>\n            <Select\n              aria-label=\"Universidad\"\n              name=\"Universidad\"\n              inputProps={{\n                  id: \"Universidad\"\n              }}\n              value={this.state.answers['Universidad']}\n              onChange={this.handleChange}\n            >\n              {universities.map((x) =>\n              <MenuItem\n                key={`university-${x}`}\n                value={x}\n              >{t(x)}</MenuItem>\n              )}\n            </Select>\n          </FormControl>\n        </div>\n        <div>\n          <FormControl className=\"form-element\" component=\"fieldset\">\n            <FormLabel component=\"legend\">Realizaste cursos de especialización</FormLabel>\n            <FormGroup style={{'flexDirection': 'column'}}>\n              {specialization.map((x) =>\n              <FormControlLabel\n                key={`specialization-${x}`}\n                control={\n                  <Checkbox\n                    checked={this.state.answers['Realizaste cursos de especialización'].indexOf(x) >= 0}\n                    onChange={this.handleChange}\n                    name=\"Realizaste cursos de especialización\"\n                    value={x}\n                  />\n                }\n                label={x}\n              />\n              )}\n            </FormGroup>\n          </FormControl>\n        </div>\n        <div>\n          <FormControl className=\"form-element\">\n            <InputLabel htmlFor=\"employees\">Cantidad de empleados en tu trabajo actual</InputLabel>\n            <Select\n              value={this.state.answers['employees']}\n              onChange={this.handleChange}\n              inputProps={{\n                name: 'employees',\n                id: 'employees',\n              }}\n            >\n              <MenuItem value=\"1-10\">1-10</MenuItem>\n              <MenuItem value=\"11-50\">11-50</MenuItem>\n              <MenuItem value=\"51-100\">51-100</MenuItem>\n              <MenuItem value=\"101-200\">101-200</MenuItem>\n              <MenuItem value=\"201-500\">201-500</MenuItem>\n              <MenuItem value=\"501-1000\">501-1000</MenuItem>\n              <MenuItem value=\"1001-2000\">1001-2000</MenuItem>\n              <MenuItem value=\"2001-5000\">2001-5000</MenuItem>\n              <MenuItem value=\"5001-10000\">5001-10000</MenuItem>\n              <MenuItem value=\"10001+\">10001+</MenuItem>\n            </Select>\n          </FormControl>\n        </div>\n        <div>\n          <FormControl className=\"form-element\">\n            <InputLabel htmlFor=\"activity\">Actividad principal</InputLabel>\n            <Select\n              value={this.state.answers['activity']}\n              onChange={this.handleChange}\n              inputProps={{\n                name: 'activity',\n                id: 'activity',\n              }}\n            >\n              <MenuItem value=\"Servicios / Consultoría de Software / Digital\">Servicios / Consultoría de Software / Digital</MenuItem>\n              <MenuItem value=\"Producto basado en Software\">Producto basado en Software</MenuItem>\n              <MenuItem value=\"Otras industrias\">Otras industrias</MenuItem>\n            </Select>\n          </FormControl>\n        </div>\n        <div>\n          <FormControl className=\"form-element\">\n            <TextField\n              id=\"¿Gente a cargo?\"\n              name=\"¿Gente a cargo?\"\n              label=\"¿Cuánta gente a cargo? (si no tenés, poné 0)\"\n              value={this.state.answers['¿Gente a cargo?']}\n              onChange={this.handleChange}\n              type=\"number\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n              inputProps={{\n                min: 0,\n              }}\n              margin=\"normal\"\n            />\n          </FormControl>\n        </div>\n        <div>\n          <FormControl className=\"form-element\">\n            <InputLabel htmlFor=\"opensource-contributor\">¿Contribuís a proyectos open source?</InputLabel>\n            <Select\n              aria-label=\"opensource-contributor\"\n              name=\"opensource-contributor\"\n              inputProps={{\n                  id: \"opensource-contributor\"\n              }}\n              value={this.state.answers['opensource-contributor']}\n              onChange={this.handleChange}\n            >\n              <MenuItem value=\"Sí\">Sí</MenuItem>\n              <MenuItem value=\"No\">No</MenuItem>\n            </Select>\n          </FormControl>\n        </div>\n        <div>\n          <FormControl className=\"form-element\">\n            <InputLabel htmlFor=\"code-as-hobbie\">¿Programás como hobbie?</InputLabel>\n            <Select\n              aria-label=\"code-as-hobbie\"\n              name=\"code-as-hobbie\"\n              inputProps={{\n                  id: \"code-as-hobbie\"\n              }}\n              value={this.state.answers['code-as-hobbie']}\n              onChange={this.handleChange}\n            >\n              <MenuItem value=\"Sí\">Sí</MenuItem>\n              <MenuItem value=\"No\">No</MenuItem>\n            </Select>\n          </FormControl>\n        </div>\n        <div>\n          <FormControl className=\"form-element\" component=\"fieldset\">\n            <FormLabel component=\"legend\">¿Tenés guardias?</FormLabel>\n            <FormGroup style={{'flexDirection': 'column'}}>\n              {duty.map((x) =>\n              <FormControlLabel\n                key={`duty-${x}`}\n                control={\n                  <Checkbox\n                    checked={this.state.answers['duty'].indexOf(x) >= 0}\n                    onChange={this.handleChange}\n                    name=\"duty\"\n                    value={x}\n                  />\n                }\n                label={x}\n              />\n              )}\n            </FormGroup>\n          </FormControl>\n        </div>\n        <div>\n          <FormControl className=\"form-element\">\n            <InputLabel htmlFor=\"occupation\">Trabajo de</InputLabel>\n            <Select\n              value={this.state.answers['occupation']}\n              onChange={this.handleChange}\n              inputProps={{\n                name: 'occupation',\n                id: 'occupation',\n              }}\n            >\n              {occupation.map((x) =>\n              <MenuItem\n                key={`occupation-${x}`}\n                value={x}\n              >{x}</MenuItem>\n              )}\n            </Select>\n          </FormControl>\n        </div>\n        <div>\n          <FormControl className=\"form-element\">\n            <InputLabel htmlFor=\"os\">¿Qué SO usás en tu laptop/PC para trabajar?</InputLabel>\n            <Select\n              aria-label=\"os\"\n              name=\"os\"\n              inputProps={{\n                  id: \"os\"\n              }}\n              value={this.state.answers['os']}\n              onChange={this.handleChange}\n            >\n              {os.map((x) =>\n              <MenuItem\n                key={`os-${x}`}\n                value={x}\n              >{x}</MenuItem>\n              )}\n            </Select>\n          </FormControl>\n        </div>\n        <div>\n          <FormControl className=\"form-element\">\n            <InputLabel htmlFor=\"os-mobile\">¿Y en tu celular?</InputLabel>\n            <Select\n              aria-label=\"os-mobile\"\n              name=\"os-mobile\"\n              inputProps={{\n                  id: \"os-mobile\"\n              }}\n              value={this.state.answers['os-mobile']}\n              onChange={this.handleChange}\n            >\n              <MenuItem value=\"Android\">Android</MenuItem>\n              <MenuItem value=\"iOS\">iOS</MenuItem>\n              <MenuItem value=\"Windows\">Windows</MenuItem>\n              <MenuItem value=\"No tengo celular / no es Smartphone\">No tengo celular / no es Smartphone</MenuItem>\n            </Select>\n          </FormControl>\n        </div>\n        <div>\n          <FormControl className=\"form-element\">\n            <InputLabel htmlFor=\"contract-type\">Tipo de Contrato</InputLabel>\n            <Select\n              aria-label=\"contract-type\"\n              name=\"contract-type\"\n              inputProps={{\n                  id: \"contract-type\"\n              }}\n              value={this.state.answers['contract-type']}\n              onChange={this.handleChange}\n            >\n              {contractType.map((x) =>\n              <MenuItem\n                key={`contractType-${x}`}\n                value={x}\n              >{x}</MenuItem>\n              )}\n            </Select>\n          </FormControl>\n        </div>\n        <div>\n          <FormControl className=\"form-element\">\n            <InputLabel htmlFor=\"sexualOrientation\">Orientación sexual</InputLabel>\n            <Select\n              aria-label=\"sexualOrientation\"\n              name=\"sexualOrientation\"\n              inputProps={{\n                  id: \"sexualOrientation\"\n              }}\n              value={this.state.answers['sexualOrientation']}\n              onChange={this.handleChange}\n            >\n              {sexualOrientation.map((x) =>\n              <MenuItem\n                key={`sexualOrientation-${x}`}\n                value={x}\n              >{x}</MenuItem>\n              )}\n            </Select>\n          </FormControl>\n        </div>\n        <div>\n          <FormControl className=\"form-element\" component=\"fieldset\">\n            <FormLabel component=\"legend\">¿A qué eventos de tecnología asististe en el último año?</FormLabel>\n            <FormGroup style={{'flexDirection': 'column'}}>\n              {events.map((x) =>\n              <FormControlLabel\n                key={`events-${x}`}\n                control={\n                  <Checkbox\n                    checked={this.state.answers['¿A qué eventos de tecnología asististe en el último año?'].indexOf(x) >= 0}\n                    onChange={this.handleChange}\n                    name=\"¿A qué eventos de tecnología asististe en el último año?\"\n                    value={x}\n                  />\n                }\n                label={x}\n              />\n              )}\n            </FormGroup>\n          </FormControl>\n        </div>\n        <div>\n          <FormControl className=\"form-element\" component=\"fieldset\">\n            <FormLabel component=\"legend\">Tecnologías que utilizás</FormLabel>\n            <FormGroup style={{height: '1900px', 'flexDirection': 'column'}}>\n              {Object.keys(tech).map(ts => tech[ts].map((x) =>\n              <FormControlLabel\n                key={`technology-${ts}-${x}`}\n                control={\n                  <Checkbox\n                    checked={this.state.answers[ts].indexOf(x) >= 0}\n                    onChange={this.handleChange}\n                    name={ts}\n                    value={x}\n                  />\n                }\n                label={x}\n              />\n              ))}\n            </FormGroup>\n          </FormControl>\n        </div>\n        <div>\n          <FormControl className=\"form-element\" component=\"fieldset\">\n            <FormLabel component=\"legend\">Beneficios extra</FormLabel>\n            <FormGroup style={{height: '620px', 'flexDirection': 'column'}}>\n              {benefits.map((x) =>\n              <FormControlLabel\n                key={`benefits-${x}`}\n                control={\n                  <Checkbox\n                    checked={this.state.answers['Beneficios extra'].indexOf(x) >= 0}\n                    onChange={this.handleChange}\n                    name=\"Beneficios extra\"\n                    value={x}\n                  />\n                }\n                label={x}\n              />\n              )}\n            </FormGroup>\n          </FormControl>\n        </div>\n        <Box\n          bgcolor=\"grey.700\"\n          color=\"white\"\n          p={2}\n          position=\"fixed\"\n          top={40}\n          right={40}\n          zIndex=\"tooltip\"\n        >\n          {salary ? this.formatter.format(salary) : 'Calculando...'}\n        </Box>\n      </div>\n    );\n  }\n}\n\nexport default withNamespaces()(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}